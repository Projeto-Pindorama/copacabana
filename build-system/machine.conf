# The variables below will change depending on the architecture.
# The default is x86_64.

# Target
COPA_TARGET="x86_64-pindoramaCOPACABANA-linux-musl"

# The default/unvendored "target tuple" that we will need when configuring LLVM.
TARGET_TUPLE="x86_64-pc-linux-musl"

# CPU information
ARCH="x86"
CPU="x86-64"

# Use binary-cached toolchains
BINARY_CACHE="false"

# Use a virtual disk or a physical one
VIRTUAL_DISK="true"
DISK_BLOCK="/tmp/COPA.IMG"

# Uncomment to use a custom disk size in gigabytes
VIRTUADISK_SIZE=10

# Disk label
# Uncomment to use a custom disk label (string) for your
# Copacabana build.
# Its size is of 16 characters at maximum.
# DISK_LABEL=""

# umount(8) on exit?
# Use "false" if you want to check how the process went, useful
# if you're a developer and trying to mess around with this, if
# not, just use "true".
UMOUNT_ON_EXIT="false"

# This is used on the Korn Shell 93 implementation of sha256sum,
# present at cmd/ on this repository.
# The default is "openssl", you may change this if you're using
# LibreSSL or another fork and it doesn't provide its
# OpenSSL-compatible shell API binary symbolic/hard linked to
# "openssl" in your path.
# If changed, the value here must be lower-case.
# SSL_CMD=""

# Where do you want the source code to be saved?
# This is the suffix for the source code directory.
# May you wish to change it just in case of wanting to mess around
# with Copacabana's FHS or compatibilize some Linux From Scratch-specific
# scripts with Copacabana.
# Per default, it is "/usr/src" (over the $COPA directory, of course),
# but you can redefine if you wish to "/sources", for example.
# SRCDIR_SUFFIX=""

# Do SHA256 checks after downloading Copacabana sources?
# Use "YES" if you're just a final user and/or developer aiming
# to port Copacabana and just wants to build a vanilla
# distribution or "NO" if you're a developer and wants to
# change/update some of the sources without regenerating the
# "sources.sha256" file before. This option is case-insensitive.
SHA256CHECK="YES" 

# Use aria2c instead of the good ol' homebrew download_sources.ksh?
# Use "true" if you have aria2c on your system, or "false" if you're on a small
# environment (such as the Copacabana 0.4 Dockerimage/Mitzune prefix) with only
# cURL and/or taking considerably more time isn't a big deal.
USE_ARIA2C="true"

# Programs
CC="gcc"
CXX="g++"
LD="ld"
AS="as"
