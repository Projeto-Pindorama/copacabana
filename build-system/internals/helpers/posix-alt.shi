# vim: set filetype=sh :
# POSIX shell alternatives for external processes, in a single libary.
# Copied from Mitzune's lib/ directory, with just the removal of the "local"
# keyword at timeout(), which isn't available on Korn Shell 93 since the
# functions already have variables defined in local scopes.

# Copyright (c) 2020-2021 Caio Novais and Luiz Antônio Rangel
# Copyright (c) 2020-2024 Luiz Antônio Rangel
# SPDX-Licence-Identifier: Caldera

# Include dirs(), pushd() and popd()
. "$progdir/build-system/internals/helpers/dirs.shi"

# vim: filetype=sh :

# basename
basename(){
	DIR=${1%${1##*[!/]}}
	DIR=${DIR##*/}
	DIR=${DIR%"$2"}
	printf '%s\n' "${DIR:-/}"
}

# realpath
realpath(){
  if ! command -v readlink 2>&1 >/dev/null; then
    # ./sources.txt -> sources.txt
    file_basename="`basename "$1"`"
    # ./sources.txt -> .
    file_dirname="`dirname "$1"`"
	 # get the absolute directory name
	 # example: ./sources.txt -> /usr/src/copacabana-repo/sources.txt
	 # cd ./; pwd -> /usr/src/copacabana-repo
    echo "`(cd "${file_dirname}"; pwd)`/${file_basename}"
  else
    readlink -f "$1"
  fi
}

# wc -l
lines(){
	while IFS= read -r LINE || [ -n "${LINE}" ]; do
		LINES=$[ ${LINES} + 1 ]
	done < "${1}"
	printf '%s\n' "$LINES"
	unset LINES
}

# timeout
timeout(){
	if ! command -v timeout 2>&1 >/dev/null; then
		time="$1"
		shift
		"$@" & PID="${!}"; sleep "$time" && kill "$PID"
	else
		command timeout "$@"
	fi
}

# nproc
nproc(){
  case "`uname -s`" in
    Darwin) getconf '_NPROCESSORS_ONLN';;
    Linux) if [ `getconf HEIRLOOM_TOOLCHEST_VERSION` -lt 230305 ]; then
            grep -c 'processor' /proc/cpuinfo
    	   else
            getconf '_NPROCESSORS_ONLN'
    	   fi ;;
    FreeBSD | OpenBSD | NetBSD) getconf 'NPROCESSORS_ONLN';;
    SunOS) echo "`ksh93 -c 'getconf NPROCESSORS_ONLN'`" ;;
  esac
}

# The # macro for arrays.
n(){
	# based on what Caio did on
	# Copacabana's cmd/download_sources.sh
	echo ${@} | wc -w
}

trim_home_path(){
	echo ${@} | sed 's@.*/home/@~@'
}

# More powerful "source" macro for Korn Shell 93,
# which can't source a file from the current
# directory.
source(){
 { [ -e "$1" ] && [ -r "$1" ] \
   && . "$(realpath "$1")"; } \
   || return 1
}

##End of alternatives section
